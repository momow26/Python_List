import sys
# 时间和空间是不可调和的矛盾
# 软件和硬件在逻辑上是等效的

def main():
    f = list(range(1, 10))
    print(f)

    # 列表生成式写法--- 占内存空间
    # 列表生成后，是实实在在的占用内存空间
    # #用列表的生成表达式语法创建列表容器
    # 用这种语法创建列表之后，元素已经准备就绪，所以需要耗费较多的内存空间（节省时间）

    f = [x for x in range(1, 10)]
    print(f)
    f = [x ** 2 for x in range(1, 10)]
    print(f)
    f = [x ** x for x in range(1, 10)]
    print(sys.getsizeof(f)) # 查看占多少内存空间
    print(f)
    # 也是列表生成式语法 二重嵌套循环 字符串拼接 循环变量组合 --组合为列表中的值
    f = [x + y for x in 'ABCDE' for y in '1234567']
    print(f)

76
    # 列表生成器语法 如果不调用，几乎就不占内存空间
    # 列表生成器，在这里得到的不是一个列表，而是一个生成器对象
    # 通过生成器可以获取到数据，它几乎不占用额外的空间存储数据，
    # 每次需要数据的时候，就通过生成器取数据，当然这需要花费时间（节省空间）
    f = (x ** x for x in range(1, 10))
    print(sys.getsizeof(f))
    print(f)
    for val in f:
        print(val)


if __name__ == '__main__':
    main()
